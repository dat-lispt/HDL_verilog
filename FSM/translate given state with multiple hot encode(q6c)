module top_module (
    input [6:1] y,
    input w,
    output Y2,
    output Y4);
	//parameter A = 6'b001, B = 6'b010,C = 6'b100,D = 6'b1000,E = 6'b10000, F = 6'b100000;
    parameter A = 0, B = 1, C=2, D=3, E=4, F= 5;
    reg [6:1] next_state;
    integer i =0;
    always @* begin
        next_state = 6'b0;
        for(i = 1; i <7 ; i= i+1) begin
            if(y[i])
                case(i - 1) 
                    A: next_state =  next_state | (w ?  (1<<A):(1<<B));
                    B: next_state = next_state | (w ?  (1<<D):(1<<C));
                    C: next_state = next_state | (w ?  (1<<D):(1<<E));
                    D: next_state = next_state | (w ?  (1<<A):(1<<F));
                    E: next_state = next_state | (w ?  (1<<D):(1<<E));
                    F: next_state = next_state | (w ?  (1<<D):(1<<C));
                    default: next_state = 6'b1;
                endcase
        end
    end
    assign Y2 = next_state[2];
    assign Y4 = next_state[4];
endmodule
