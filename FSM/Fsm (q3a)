module top_module (
    input clk,
    input reset,   // Synchronous reset
    input s,
    input w,
    output z
);
    parameter A= 1'b0, B = 1'b1; 
    integer cnt= 0, keep_track =0;
    reg state = A;

    always @(posedge clk) begin
        if(reset) begin
            state = A;
            cnt = 0;
            keep_track = 0;
        end
        else begin
            case(state)
                A: begin
                    state <= s ? B : A; 
                end
                B: begin
                    state <= B;
                end
            endcase

            if(keep_track==3) begin
                cnt <= w ? 1: 0;
                keep_track <= 1;
            end
            else if(state == B) begin
                cnt <= w ? (cnt + 1) : cnt;
                keep_track <= keep_track + 1;
            end
        end
    end
    assign z = (cnt == 2) && ( keep_track == 3);

endmodule
