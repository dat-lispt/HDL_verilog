module top_module(
    input clk,
    input areset,    // Freshly brainwashed Lemmings walk left.
    input bump_left,
    input bump_right,
    input ground,
    input dig,
    output walk_left,
    output walk_right,
    output aaah,
    output digging ); 
    parameter left= 0, right =1, fall=1, nofall= 0, dig_act =1, nodig_act = 0;
    reg [2:0] state, next_state;
    always @* begin
        next_state <= state;
		if(!ground)
        	next_state[1] <= fall;
		else 
            next_state[1] <= nofall;
        
        if (ground && (dig | next_state[2] == dig_act)) next_state[2] <= dig_act;
        else next_state[2] <= nodig_act;
        
        if(state[1] | ~ground) 
            next_state[0] <= state[0];
        else begin
            if(~state[0]&bump_left) next_state[0] <= right;
            else if(state[0] & bump_right) next_state[0] <= left;
        end
    end
    
    always @(posedge clk, posedge areset)begin
        if(areset)
            state <= left;
        else begin
            state <= next_state;
        end
    end
    assign walk_left = ~state[0] & ~state[1] & ~state[2] ;
    assign walk_right = state[0] & ~state[1] & ~state[2];
    assign aaah = state[1];
    assign digging = state[2];
endmodule
